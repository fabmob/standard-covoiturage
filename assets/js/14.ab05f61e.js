(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{275:function(e,r,t){"use strict";t.r(r);var a=t(10),o=function(e){e.options.__data__block__={mermaid_382ee168:"sequenceDiagram\n    participant U as User\n    participant M as MaaS\n    participant T as TO\n    U->>M: [Search](Search) for journeys\n    rect rgb(255, 255, 236)\n    M->>T: GET /driver_journeys (or /passenger_journeys)\n    T--\x3e>M: DriverJourneys[] (or PassengerJourneys[])\n    end\n    M--\x3e>U: Show results\n"}},n=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"search"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[e._v("#")]),e._v(" Search")]),e._v(" "),r("h2",{attrs:{id:"search-for-single-journeys"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#search-for-single-journeys"}},[e._v("#")]),e._v(" Search for single journeys "),r("Badge",{attrs:{text:"draft"}})],1),e._v(" "),r("p",[e._v("Search functionalities cover two different possible use cases: a driver can\nsearch for passengers (so, he searches a "),r("code",[e._v("PassengerJourney")]),e._v("), or a passenger\ncan search for a driver (looking for a "),r("code",[e._v("DriverJourney")]),e._v(").")]),e._v(" "),r("p",[e._v("Each search has its dedicated endpoint and return value. The carpooling\noperator can implement one or the other or both following API endpoints:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("GET /driver_journeys")]),e._v(" and/or")]),e._v(" "),r("li",[r("code",[e._v("GET /passenger_journeys")])])]),e._v(" "),r("Mermaid",{attrs:{id:"mermaid_382ee168",graph:e.$dataBlock.mermaid_382ee168}}),r("p",[e._v("No user information is required to perform a search.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("Round trips")]),e._v(" "),r("p",[e._v("To search for a round trip, it is up to the MaaS platform to perform the\nsearches for the outward and return journeys separately.")])]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("Regular trips")]),e._v(" "),r("p",[e._v("Searching for regular trips has its own specific workflow presented in\n"),r("a",{attrs:{href:"#search-for-regular-trips-and-associated-journeys"}},[e._v("a dedicated section")]),e._v("\nbelow.")])]),e._v(" "),r("h3",{attrs:{id:"the-journey-objects"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-journey-objects"}},[e._v("#")]),e._v(" The "),r("code",[e._v("*Journey")]),e._v(" objects")]),e._v(" "),r("p",[e._v("The "),r("code",[e._v("*Journey")]),e._v(" objects come in two flavors, the "),r("code",[e._v("DriverJourney")]),e._v(" and the\n"),r("code",[e._v("PassengerJourney")]),e._v(". Passengers looking for a ride will search for a\n"),r("code",[e._v("DriverJourney")]),e._v(", and drivers looking for passengers will search for a\n"),r("code",[e._v("PassengerJourney")]),e._v(".")]),e._v(" "),r("p",[e._v("The "),r("code",[e._v("*Journey")]),e._v(" object provides the necessary information to procede to the\nbooking phase (TODO link). It gives the start and end positions of the shared\njourney, the expected start time and duration, the carpooling operator and\ninformation on the driver or passenger.")]),e._v(" "),r("p",[e._v("If booking by deep link is supported, the link is shared along the journey\ninformation in the response's attribute "),r("code",[e._v("webUrl")]),e._v(". If integrated booking by API\nis supported, then the journey information plus the "),r("code",[e._v("price")]),e._v(" attribute enable\nto make a booking request.")]),e._v(" "),r("p",[e._v("The "),r("code",[e._v("price")]),e._v(" is to be interpreted as the actual amount expected by the\ncarpooling operator in case of booking by API, and a price estimate (subject\nto change) in case of bookingn via deep link.")]),e._v(" "),r("h3",{attrs:{id:"technical-specification"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#technical-specification"}},[e._v("#")]),e._v(" Technical specification")]),e._v(" "),r("p",[e._v("The carpooling operator MUST return at most "),r("code",[e._v("count")]),e._v(" matching results, or all\nmatching results if "),r("code",[e._v("count")]),e._v(" parameter is not specified. All returned results\nMUST match the query parameters. If the parameter "),r("code",[e._v("count")]),e._v(" is specified, the\ncarpooling operator SHOULD return in priority the most relevant results. The\nmeasure of relevance is left to the discretion of the carpooling operator.")]),e._v(" "),r("p",[e._v("The "),r("code",[e._v("id")]),e._v(" attribute of the response MUST be unique for a given carpooling\noperator (same "),r("code",[e._v("operator")]),e._v(" attribute) among all journeys (whether\n"),r("code",[e._v("PassengerJourney")]),e._v(" or "),r("code",[e._v("DriverJourneys")]),e._v(").")]),e._v(" "),r("p",[e._v("If no price estimate is possible, a price with "),r("code",[e._v("type")]),e._v(' "UNKNOWN" SHOULD be\nreturned. A journey with an unknown price is not available for integrated\nbooking by API. If the '),r("code",[e._v("type")]),e._v(' is "PAYING", then the attributes '),r("code",[e._v("amount")]),e._v(" and\n"),r("code",[e._v("currency")]),e._v(" are required.")]),e._v(" "),r("h2",{attrs:{id:"search-for-regular-trips-and-associated-journeys"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#search-for-regular-trips-and-associated-journeys"}},[e._v("#")]),e._v(" Search for regular trips and associated journeys "),r("Badge",{attrs:{text:"draft"}})],1),e._v(" "),r("p",[e._v("A regular trip is a recurring trip that is repeated from one week to another.")]),e._v(" "),r("p",[e._v("Searching for regular trips can be done with specific endpoints, which are the\ncounterparts of the "),r("code",[e._v("GET /passenger_journeys")]),e._v(" and "),r("code",[e._v("GET /driver_journeys")]),e._v(". The\ncarpooling operator can implement one or the other or both API endpoints:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("GET /driver_regular_trips")]),e._v(" and/or")]),e._v(" "),r("li",[r("code",[e._v("GET /passenger_regular_trips")])])]),e._v(" "),r("p",[e._v("The API works by searching journeys that start around the same time of the day\nat given weekdays. The query parameters therefore specify an additionnal\nrequired "),r("code",[e._v("departureTimeOfDay")]),e._v(" attribute, and an optional "),r("code",[e._v("departureWeekdays")]),e._v("\nattribute compared to the single journey search (which defaults to all days of\nthe week).")]),e._v(" "),r("p",[e._v("Return values may only cover partially the request on the "),r("code",[e._v("departureWeekdays")]),e._v(".")]),e._v(" "),r("h3",{attrs:{id:"the-regulartrip-objects"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-regulartrip-objects"}},[e._v("#")]),e._v(" The "),r("code",[e._v("*RegularTrip")]),e._v(" objects")]),e._v(" "),r("p",[e._v("Again, two slightly different objects can be returned depending on the\nendpoint usedÂ : a "),r("code",[e._v("DriverRegularTrip")]),e._v(" or a "),r("code",[e._v("PassengerRegularTrip")]),e._v(".")]),e._v(" "),r("p",[e._v("These return objects share a large amount of information with the "),r("code",[e._v("*Journey")]),e._v("\nobject.")]),e._v(" "),r("p",[e._v("But instead of giving information on a single start time, they offer a\n"),r("code",[e._v("schedules")]),e._v(" attribute that details the decomposition of the regular trip into\nsingle journeys. Schedule information combined with regular trip attributes\ngive the same level of information for the single journeys than a simple\nsearch would, allowing to continue to the booking phase.")]),e._v(" "),r("p",[e._v("For booking via deep link, an additional "),r("code",[e._v("webUrl")]),e._v(" attribute is available, to\nfacilitate booking journeys in bulk and avoid the bad user experience of\nhaving to go back and forth between the MaaS the carpooling apps as many times\nas there are journeys to book.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("More sophisticated regular trips")]),e._v(" "),r("p",[e._v("It is up to the MaaS platform to assemble the results of several calls into a\nmore sophisticated regular journey.")]),e._v(" "),r("p",[e._v("For instance, a varying "),r("code",[e._v("departureTimeOfDay")]),e._v(" depending on week day, or\ndifferent schedules on alternating weeks, can be queried with a large\n"),r("code",[e._v("timeDelta")]),e._v(" and post-filtering, or with several calls with different\n"),r("code",[e._v("departureTimeOfDay")]),e._v(" and concatenation.")])]),e._v(" "),r("h3",{attrs:{id:"technical-specification-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#technical-specification-2"}},[e._v("#")]),e._v(" Technical specification")]),e._v(" "),r("p",[e._v("The carpooling operator MUST return at most "),r("code",[e._v("count")]),e._v(" matching results, or all\nmatching results if "),r("code",[e._v("count")]),e._v(" parameter is not specified. All returned results\nMUST match the query parameters.")]),e._v(" "),r("p",[e._v("A regular trip matches the "),r("code",[e._v("departureWeekdays")]),e._v(" and "),r("code",[e._v("departureTimeOfDay")]),e._v(" if\n"),r("em",[e._v("any")]),e._v(" journey of the regular trip matches the time and day constraint and\nstarts between "),r("code",[e._v("minDepartureDate")]),e._v(" and "),r("code",[e._v("maxDepartureDate")]),e._v(" (included).")]),e._v(" "),r("p",[e._v("The returned results may not reach the "),r("code",[e._v("maxDepartureDate")]),e._v(" because of the\nlimited forecasting horizon of the carpooling operator.")]),e._v(" "),r("p",[e._v("If the carpooling operator supports booking by deep link, the "),r("code",[e._v("webUrl")]),e._v('\nattribute in the response SHOULD link to a page giving an overview of the\nregular trips (e.g. a "driver" page) and allowing to continue the process of\nregular trips by the user.')])],1)}),[],!1,null,null,null);"function"==typeof o&&o(n);r.default=n.exports}}]);