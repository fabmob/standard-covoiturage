(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{274:function(e,t,o){"use strict";o.r(t);var n=o(10),a=function(e){e.options.__data__block__={mermaid_382ee1c1:"sequenceDiagram\n    participant U as User\n    participant M as MaaS\n    participant T as TO\n    U->>M: Search for journeys\n    M->>T: GET /driver_journeys (or /passenger_journeys)\n    T--\x3e>M: DriverJourneys[] (or PassengerJourneys[])\n    M--\x3e>U: Show results\n    rect rgb(255, 255, 236)\n      U->>M: Book specific journey\n      M->>T: POST /bookings Booking{id=123}\n      alt accepted by TO\n        T--\x3e>M: HTTP 201 Created\n      else rejected by TO\n        T--\x3e>M: HTTP 500 Internal Server Error\n      end\n      opt booking update by MaaS\n        M->>T: PATCH /bookings/123\n      end\n      opt booking update by TO\n        T->>M: PATCH /bookings/123\n      end\n    end\n",mermaid_64a56ef6:'flowchart LR\n    A[Display trip<br>results<br>on MaaS] --\x3e|Passenger clicks<br>on result| B{Is operator app <br/>installed?}\n    B --\x3e|Yes| D\n    B --\x3e|No| K["Redirect to store<br>(Search parameters<br>are preserved)"]\n    K --\x3e|App installed| D[Display<br>trip details]\n    D --\x3e E{Passenger<br>booked<br>trip?}\n    E -.->|"No, back to results"| A\n    E -.-> |Yes| F[Operator sends<br>booking details<br>to MaaS]\n    F -.-> |Back to MaaS| G((Display trip<br>booked))\n'}},i=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"booking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#booking"}},[e._v("#")]),e._v(" Booking")]),e._v(" "),t("p",[e._v("This specifications provides two flows for implementing a booking transaction:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#integrated-booking-by-api"}},[e._v("Integrated booking by API")]),e._v(": the initial booking\nis handled by an API exchange between MaaS platforms and operators. Users\nstay on their original application, without having to switch to another one,\nand they don't need to be authenticated with the carpooling operator.")]),e._v(" "),t("li",[t("a",{attrs:{href:"#delegated-booking-by-deep-link"}},[e._v("Delegated booking by deep link")]),e._v(": booking\nis handled by switching applications, with a deep link to access directly\nthe right page on the carpooling operator application. The user needs to\nauthenticate with the carpooling operator.")])]),e._v(" "),t("p",[e._v("MaaS platforms and carpooling operators MUST support at least one of these two\nflows if they implement booking. They MAY implement both.")]),e._v(" "),t("h2",{attrs:{id:"integrated-booking-by-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#integrated-booking-by-api"}},[e._v("#")]),e._v(" Integrated booking by API")]),e._v(" "),t("p",[e._v("Integrated booking by API is one of the "),t("a",{attrs:{href:"#booking"}},[e._v("two possible booking\nflows")]),e._v(". In this booking flow, the MaaS platform initiates the\nbooking and communicates his intention to the carpooling operator via the API."),t("br"),e._v("\nThe user is not expected to be authenticated with the carpooling operator.")]),e._v(" "),t("p",[e._v("It is based on three endpoints :")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("POST /bookings")]),e._v(": initialize the booking request")]),e._v(" "),t("li",[t("code",[e._v("PATCH /bookings/{bookingID}")]),e._v(": modify the state of the booking status to\ncomplete the booking flow")]),e._v(" "),t("li",[t("code",[e._v("GET /bookings/{bookingId}")]),e._v(": get the state of the booking")])]),e._v(" "),t("p",[e._v("The following diagram shows the typical functional flow for booking by API:")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee1c1",graph:e.$dataBlock.mermaid_382ee1c1}}),t("h3",{attrs:{id:"technical-specification"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#technical-specification"}},[e._v("#")]),e._v(" Technical specification")]),e._v(" "),t("p",[e._v("If the booking is made after a search, the MaaS platform SHOULD recall the\njourney IDs. TODO It is up to the carpooling operator to decide how to process\nthis information, e.g for consistency checks, and how to deal with missing\njourney IDs.")]),e._v(" "),t("p",[e._v("A status change MUST update the "),t("code",[e._v("status")]),e._v(" to a subsequent status respecting the\nfollowing order (some statuses may be skipped): [WAITING_CONFIRMATION,\nCONFIRMED,  COMPLETED_PENDING_VALIDATION, VALIDATED, CANCELLED].  "),t("code",[e._v("status")]),e._v("\nupdate requests that do not comply with this rule SHOULD be dismissed by the\nMaaS platform (they may be the result of an order of receipt different from\nthat of the requests sending).")]),e._v(" "),t("h2",{attrs:{id:"delegated-booking-by-deep-link"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#delegated-booking-by-deep-link"}},[e._v("#")]),e._v(" Delegated booking by deep link")]),e._v(" "),t("p",[e._v("Delegated booking by deep link is one of the "),t("a",{attrs:{href:"#booking"}},[e._v("two possible booking\nflows")]),e._v(". It consists in redirecting the user to another application\nto make the booking. The redirection is enabled by the "),t("code",[e._v("webUrl")]),e._v(" attribute of\nany "),t("code",[e._v("*Journey")]),e._v(" or "),t("code",[e._v("*RegularTrip")]),e._v(" objects.")]),e._v(" "),t("p",[e._v("There is no API endpoint associated to this operation.")]),e._v(" "),t("p",[e._v("After the booking is made, information may be made available on the MaaS\nplatform if the MaaS platforms has implemented the "),t("a",{attrs:{href:"#booking-information-feed"}},[e._v("booking information\nfeed")]),e._v(". Subsequent operations on the booking are\nrequired to be made on the carpooling operator's application, and information\nabout these operations are communicated to the MaaS platform via the booking\ninformation feed.")]),e._v(" "),t("h3",{attrs:{id:"booking-information-feed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#booking-information-feed"}},[e._v("#")]),e._v(" Booking information feed")]),e._v(" "),t("p",[e._v("The booking feed is the channel by which the carpooling operator sends back"),t("br"),e._v("\ninformation to the MaaS platform, about the booking events happening on the\ncarpooling operator website or app. It is therefore used in conjunction with\ndelegated booking by deep link (but not indispensable).")]),e._v(" "),t("p",[e._v("The booking feed mechanism relies on an "),t("a",{attrs:{href:"https://openid.net/specs/openid-connect-core-1_0.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open ID Connect\n1.0"),t("OutboundLink")],1),e._v(" identity layer\nwhere the Provider is the MaaS platform, subsequently referred to as "),t("RouterLink",{attrs:{to:"/authentication.html"}},[e._v('"MaaS\nconnect"')]),e._v(".")],1),e._v(" "),t("p",[e._v("To benefit from the booking feed, the MaaS platform needs to implement the\nfollowing endpoint:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("POST /booking_events")])])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Resilience of the booking feed endpoint")]),e._v(" "),t("p",[e._v("The result of a valid call to the booking feed endpoint does not depend on\nprecedent calls. This makes it more resilient to information losses that may\noccur.")])]),e._v(" "),t("h3",{attrs:{id:"the-carpoolbookingevent-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-carpoolbookingevent-object"}},[e._v("#")]),e._v(" The "),t("code",[e._v("CarPoolBookingEvent")]),e._v(" object")]),e._v(" "),t("p",[e._v("The MaaS platform receives a "),t("code",[e._v("CarPoolBookingEvent")]),e._v(" at each call to "),t("code",[e._v("POST /booking_events")]),e._v(".")]),e._v(" "),t("p",[e._v("Each event has its unique "),t("code",[e._v("id")]),e._v(", and specifies the "),t("code",[e._v("idToken")]),e._v(" to be able to link\nthe event to a specific user.")]),e._v(" "),t("p",[e._v("Event "),t("code",[e._v("data")]),e._v(" can be either a "),t("code",[e._v("DriverCarpoolBooking")]),e._v(" or a\n"),t("code",[e._v("PassengerCarpoolBooking")]),e._v(", depending on if a "),t("code",[e._v("DriverJourney")]),e._v(" or a\n"),t("code",[e._v("PassengerJourney")]),e._v(" has been booked.")]),e._v(" "),t("p",[e._v("These objects, in addition to recalling all information about the journey,\nhave following additional required attributes:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("status")]),e._v(" specifies the booking status.")]),e._v(" "),t("li",[t("code",[e._v("webUrl")]),e._v(" is a link to the booking page on the carpooling operator's\napplication")])]),e._v(" "),t("p",[e._v("The different statuses are as follows, where each update can only go to a\nsubsequent item in the list:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("WAITING_CONFIRMATION")]),e._v(": the booking has not yet been confirmed by the\ncarpooling operator")]),e._v(" "),t("li",[t("strong",[e._v("CONFIRMED")]),e._v(": the booking is confirmed")]),e._v(" "),t("li",[t("strong",[e._v("COMPLETED_PENDING_VALIDATION")]),e._v(": the booked journey has been completed,\nsome verifications are still underway (possibly linked to the payment, the\nanti-fraud process, etc).")]),e._v(" "),t("li",[t("strong",[e._v("VALIDATED")]),e._v(": the booking has been successfully completed.")]),e._v(" "),t("li",[t("strong",[e._v("CANCELLED")]),e._v(": the booking is cancelled")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Immutable attributes")]),e._v(" "),t("p",[e._v("Even if each booking event contains all journey information, all attributes\nexcept "),t("code",[e._v("status")]),e._v(" of the "),t("code",[e._v("*Booking")]),e._v(' object are immutable for a given booking\n"id".  Any change on these attributes requires to cancel the booking and\ncreate a new one.')])]),e._v(" "),t("h3",{attrs:{id:"technical-specification-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#technical-specification-2"}},[e._v("#")]),e._v(" Technical specification")]),e._v(" "),t("h4",{attrs:{id:"technical-specification-for-the-booking-by-deep-link"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#technical-specification-for-the-booking-by-deep-link"}},[e._v("#")]),e._v(" Technical specification for the booking by deep link")]),e._v(" "),t("p",[e._v("The carpooling operator supporting deep linking MUST provide for each "),t("code",[e._v("Journey")]),e._v("\nshared with the MaaS platform an attribute "),t("code",[e._v("webUrl")]),e._v(", with the full URL (with\nall needed parameters) for the user's device to redirect the passenger from\nthe app of the MaaS platform to the operator's app or website.")]),e._v(" "),t("p",[e._v("The booking flow with a deep link is initiated by the MaaS platform with a\n"),t("code",[e._v("*Journey")]),e._v(" or "),t("code",[e._v("*RegularTrip")]),e._v(" object provided by a carpooling operator (e.g. as\na result of a previous search). To do that, it MUST redirect the user to the\ndeep link contained in the "),t("a",{attrs:{href:"TODO"}},[e._v("webUrl")]),e._v(" parameter.")]),e._v(" "),t("p",[e._v("If the operator is providing an app (and not a website), one obstacle to\nredirecting the passenger is whether they have the operator's app already\ninstalled in their mobile device or not. If not, the deep link URL SHOULD be\ncapable of redirecting the passenger to the corresponding store instead. At\nthe operator's discretion, this URL can also temporarily store the URL\nparameters for later retrieval. There are third-party services as well that\ncan provide such a solution. This way, after the app is installed, the\nparameters can be recovered to automatically redirect the passenger to the\nbooking flow as if the app had always been installed.")]),e._v(" "),t("p",[e._v("If the operator provides a website or if its app was already installed, then\nfollowing the deep link SHOULD automatically and seamlessly redirect the\npassenger to the operator's booking flow. It is up to the operator to decide\nwhere to start this flow and what to do with the parameters sent to the MaaS\napp in the search to provide the passenger with the best booking experience.")]),e._v(" "),t("p",[e._v("It is up to the passenger to decide whether to book the journey, any other\njourney or none.")]),e._v(" "),t("p",[e._v("If the passenger decides not to book the journey being displayed (or if is not\navailable anymore), the operator MAY provide the means for the passenger to go\nback to the search results on the MaaS app. It is then up to the passenger to\ndecide whether to select another result and repeat the above process. If they\ndecide to book it, it is at the operator's discretion to decide how to\ncontinue guiding the passenger through the booking process.")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_64a56ef6",graph:e.$dataBlock.mermaid_64a56ef6}}),t("h4",{attrs:{id:"details-technical-specification-for-the-booking-feed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#details-technical-specification-for-the-booking-feed"}},[e._v("#")]),e._v(" Details Technical specification for the booking feed")]),e._v(" "),t("p",[e._v('A carpooling operator offering booking by deep link MUST accept authentication\nvia "MaaS connect".')]),e._v(" "),t("p",[e._v('A MaaS platform SHOULD provide a "MaaS Connect" identity layer in order to get\nback information on booking events happening on the platform of the transport\noperator. In that case, it also MUST provide an API endpoint matching the\n'),t("code",[e._v("POST /booking_events")]),e._v(" specification. Moreover, the passenger MUST be\nauthenticated using MaaS Connect at the time of the redirection to allow the\nbooking feed.")]),e._v(" "),t("p",[e._v("The booking feed flow starts as soon as a booking is created, regardless of\nwhether the trip was first consulted on the MaaS app. It sends booking data to\nthe MaaS platform. It allows the MaaS platform to support use-cases for which\nbooking data need to be instantly available (real-time reporting, incentive\nprogram, pricing bundles,...).")]),e._v(" "),t("p",[e._v("If the MaaS platform is offering the "),t("code",[e._v("POST /booking_events")]),e._v(" endpoint, and once\na booking is created, the operator MUST send the booking details to the MaaS\nplatform. The operator MUST also notify every "),t("code",[e._v("status")]),e._v(" update of the booking\nto the MaaS plateform. As specified in "),t("a",{attrs:{href:"#32-booking"}},[e._v("the introduction of the booking\nsection")]),e._v(", every other change MUST be operated by creating a new "),t("code",[e._v("Booking")]),e._v("\nobject and udating the "),t("code",[e._v("status")]),e._v(' of the former booking to "CANCELLED".')]),e._v(" "),t("p",[e._v("A status update with the "),t("code",[e._v("POST /booking_events")]),e._v(" endpoint MUST repeat the whole\n"),t("code",[e._v("Booking")]),e._v(" object each time as redunduncy allows for a better resilience to\ncommunication failures (e.g. a status update event can be processed even if\nthe booking creation event has been missed).")]),e._v(" "),t("p",[e._v("A status change MUST update the "),t("code",[e._v("status")]),e._v(" to a subsequent status respecting the\nfollowing order (some statuses may be skipped): [WAITING_CONFIRMATION,\nCONFIRMED,  COMPLETED_PENDING_VALIDATION, VALIDATED, CANCELLED].  "),t("code",[e._v("status")]),e._v("\nupdate requests that do not comply with this rule SHOULD be dismissed by the\nMaaS platform (they may be the result of an order of receipt different from\nthat of the requests sending).")])],1)}),[],!1,null,null,null);"function"==typeof a&&a(i);t.default=i.exports}}]);